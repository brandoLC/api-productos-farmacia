org: brandolc18
service: api-productos

plugins:
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::248056481657:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_productos
    JWT_SECRET: mi-super-secreto-jwt-2025

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: "node18"
    platform: "node"
    mainFields: ["module", "main"]
    external:
      - aws-sdk
    packager: "npm"
    packagerOptions:
      scripts:
        - npm install --production

functions:
  listar-productos:
    handler: productos.listarProductos
    events:
      - http:
          path: /productos/listar
          method: get
          cors: true
          integration: lambda

  crear-producto:
    handler: productos.crearProducto
    events:
      - http:
          path: /productos/crear
          method: post
          cors: true
          integration: lambda
          request:
            contentHandling: CONVERT_TO_TEXT
            parameters:
              headers:
                Content-Type: true

  buscar-producto:
    handler: productos.buscarProducto
    events:
      - http:
          path: /productos/buscar/{codigo}
          method: get
          cors: true
          integration: lambda
          request:
            parameters:
              paths:
                codigo: true

  modificar-producto:
    handler: productos.modificarProducto
    events:
      - http:
          path: /productos/modificar/{codigo}
          method: put
          cors: true
          integration: lambda

  eliminar-producto:
    handler: productos.eliminarProducto
    events:
      - http:
          path: /productos/eliminar/{codigo}
          method: delete
          cors: true
          integration: lambda

  obtener-categorias:
    handler: productos.obtenerCategorias
    events:
      - http:
          path: /productos/categorias
          method: get
          cors: true
          integration: lambda

  filtrar-productos:
    handler: productos.filtrarProductos
    events:
      - http:
          path: /productos/filtrar
          method: get
          cors: true
          integration: lambda

  obtener-subcategorias:
    handler: productos.obtenerSubcategorias
    events:
      - http:
          path: /productos/categorias/{categoria}/subcategorias
          method: get
          cors: true
          integration: lambda
          request:
            parameters:
              paths:
                categoria: true

  obtener-estadisticas:
    handler: productos.obtenerEstadisticas
    events:
      - http:
          path: /productos/estadisticas
          method: get
          cors: true
          integration: lambda

resources:
  Resources:
    # Tabla DynamoDB
    TablaProductos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: codigo
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: codigo
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
